definitions:
  controller.TokenRequest:
    properties:
      refresh:
        type: string
    type: object
  controller.User:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: admin@test.com
    name: admin
    url: http://test.com/support
  description: API management Server by Fiber | Doc by Swagger.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: API by Fiber and Swagger
  version: "1.0"
paths:
  /api/v1/authentication/refresh:
    post:
      consumes:
      - application/json
      description: Refreshes a JWT token if the provided token is valid.
      parameters:
      - description: JWT token
        in: body
        name: token
        required: true
        schema:
          $ref: '#/definitions/controller.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: New JWT token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Invalid token
          schema:
            type: string
        "500":
          description: Failed to refresh token
          schema:
            type: string
      summary: Token refresh
      tags:
      - auth
  /api/v1/authentication/signin:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token if credentials are
        valid.
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controller.User'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Invalid credentials
          schema:
            type: string
        "500":
          description: No username found
          schema:
            type: string
      summary: User login
      tags:
      - auth
  /api/v1/helloworld:
    get:
      consumes:
      - '*/*'
      description: get Hello World of server.
      produces:
      - application/json
      responses:
        "200":
          description: Hello world!!
      security:
      - BearerAuth: []
      summary: Show the HelloWorld to server.
      tags:
      - Test
  /api/v1/protected:
    get:
      consumes:
      - application/json
      description: This route is protected and requires a valid JWT token.
      produces:
      - application/json
      responses:
        "200":
          description: Welcome to the protected area
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Protected route
      tags:
      - Protected
  /api/v1/test:
    get:
      consumes:
      - '*/*'
      description: get test of server.
      produces:
      - application/json
      responses:
        "200":
          description: test
      security:
      - BearerAuth: []
      summary: Show the test to server.
      tags:
      - Test
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
